@model global::Stage.AlienTrick.Models.Takenmodel
@{
    ViewBag.Title = "Plan meeting of taak";
}

<h2>Create</h2>

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")


@using (Html.BeginForm("CreateMeeting", "Studenten", FormMethod.Post, null))
{
    var afspraakTypen = new SelectListItem[]
    {
new SelectListItem { Value = "Taak", Text = "Taak" },
new SelectListItem { Value = "Afspraak", Text = "Afspraak" },
new SelectListItem { Value = "Verlof", Text = "Verlof" }
    };
    @Html.HiddenFor(m => m.student.ID)
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.TaskName, "Taak Naam", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaskName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaskName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br>
    <br>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.TaskDescription, "Taak Beschrijving", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
        </div>
    </div>
    <br>
    <br>
    <br />
    <div class="form-group" id="typeafspraak">
        @Html.LabelFor(model => model.Type, "Taak, afspraak of verlof", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Type, afspraakTypen, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>
    <br>
    <br>
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.SchoolOrWork, "School gerelateerd = 1 Werk gerelateerd = 2", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SchoolOrWork, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SchoolOrWork, "", new { @class = "text-danger" })
        </div>
    </div>
    <br>
    <br>
    <br />
    <script>
        jQuery(document).ready(function () {
            jQuery("#typeafspraak").on("input", function (e) {
                if (jQuery(e.target).val() === "Afspraak") {
                    jQuery("#datepicker").show();
                }
                else if (jQuery(e.target).val() === "Verlof") {
                    jQuery("#datepicker").show();
                    }

                 else {
                    jQuery("#datepicker").hide();
                }
            });
        });

        jQuery(document).ready(function () {
            jQuery("#typeafspraak").on("input", function (f) {
                if (jQuery(f.target).val() === "Afspraak") {
                    jQuery("#time").show();
                } else if ((jQuery(f.target).val() === "Verlof")){
                    jQuery("#time").show();
                }
                else {
                    jQuery("#time").hide();
                }
            });
        });
    </script>
    <div class="form-group" id="datepicker" style="display: none">
        @Html.LabelFor(model => model.BeginDate, "Wanneer is de afspraak?", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BeginDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.BeginDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <br />
         <div class="form-group" id="time" *style="display: none">
             @Html.LabelFor(model => model.Time, "Hoelaat is de afspraak?", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                 @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control", @type = "time" } })
                 @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                </div>
         </div>
         <br />
         <br />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>
